{"ast":null,"code":"var _jsxFileName = \"/Users/calvinbeighle/Desktop/Fall2023/LitGPT/LitGPTFrontEnd/src/index.js\";\nimport React, { useState } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport BotMessage from \"./components/BotMessage\";\nimport UserMessage from \"./components/UserMessage\";\nimport Messages from \"./components/Messages\";\nimport Input from \"./components/Input\";\nimport API from \"./ChatbotAPI\";\nimport \"./styles.css\";\nimport Header from \"./components/Header\";\nfunction Chatbot() {\n  const [messages, setMessages] = useState([]);\n  const send = async text => {\n    const newMessages = messages.concat( /*#__PURE__*/React.createElement(UserMessage, {\n      key: messages.length + 1,\n      text: text,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 7\n      }\n    }), /*#__PURE__*/React.createElement(BotMessage, {\n      key: messages.length + 2,\n      fetchMessage: async () => await API.GetChatbotResponse(text),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 7\n      }\n    }));\n    setMessages(newMessages);\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"chatbot\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Messages, {\n    messages: messages,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    onSend: send,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }\n  }));\n}\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render( /*#__PURE__*/React.createElement(Chatbot, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 17\n  }\n}), rootElement);","map":{"version":3,"names":["React","useState","ReactDOM","BotMessage","UserMessage","Messages","Input","API","Header","Chatbot","messages","setMessages","send","text","newMessages","concat","createElement","key","length","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","fetchMessage","GetChatbotResponse","className","onSend","rootElement","document","getElementById","render"],"sources":["/Users/calvinbeighle/Desktop/Fall2023/LitGPT/LitGPTFrontEnd/src/index.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport BotMessage from \"./components/BotMessage\";\nimport UserMessage from \"./components/UserMessage\";\nimport Messages from \"./components/Messages\";\nimport Input from \"./components/Input\";\n\nimport API from \"./ChatbotAPI\";\n\nimport \"./styles.css\";\nimport Header from \"./components/Header\";\n\nfunction Chatbot() {\n  const [messages, setMessages] = useState([]);\n\n  const send = async text => {\n    const newMessages = messages.concat(\n      <UserMessage key={messages.length + 1} text={text} />,\n      <BotMessage\n        key={messages.length + 2}\n        fetchMessage={async () => await API.GetChatbotResponse(text)}\n      />\n    );\n    setMessages(newMessages);\n  };\n\n  return (\n    <div className=\"chatbot\">\n      <Header />\n      <Messages messages={messages} />\n      <Input onSend={send} />\n    </div>\n  );\n}\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(<Chatbot />, rootElement);"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,QAAQ,MAAM,WAAW;AAEhC,OAAOC,UAAU,MAAM,yBAAyB;AAChD,OAAOC,WAAW,MAAM,0BAA0B;AAClD,OAAOC,QAAQ,MAAM,uBAAuB;AAC5C,OAAOC,KAAK,MAAM,oBAAoB;AAEtC,OAAOC,GAAG,MAAM,cAAc;AAE9B,OAAO,cAAc;AACrB,OAAOC,MAAM,MAAM,qBAAqB;AAExC,SAASC,OAAOA,CAAA,EAAG;EACjB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAE5C,MAAMW,IAAI,GAAG,MAAMC,IAAI,IAAI;IACzB,MAAMC,WAAW,GAAGJ,QAAQ,CAACK,MAAM,eACjCf,KAAA,CAAAgB,aAAA,CAACZ,WAAW;MAACa,GAAG,EAAEP,QAAQ,CAACQ,MAAM,GAAG,CAAE;MAACL,IAAI,EAAEA,IAAK;MAAAM,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,CAAE,CAAC,eACrDxB,KAAA,CAAAgB,aAAA,CAACb,UAAU;MACTc,GAAG,EAAEP,QAAQ,CAACQ,MAAM,GAAG,CAAE;MACzBO,YAAY,EAAE,MAAAA,CAAA,KAAY,MAAMlB,GAAG,CAACmB,kBAAkB,CAACb,IAAI,CAAE;MAAAM,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,CAC9D,CACH,CAAC;IACDb,WAAW,CAACG,WAAW,CAAC;EAC1B,CAAC;EAED,oBACEd,KAAA,CAAAgB,aAAA;IAAKW,SAAS,EAAC,SAAS;IAAAR,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACtBxB,KAAA,CAAAgB,aAAA,CAACR,MAAM;IAAAW,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAAE,CAAC,eACVxB,KAAA,CAAAgB,aAAA,CAACX,QAAQ;IAACK,QAAQ,EAAEA,QAAS;IAAAS,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAAE,CAAC,eAChCxB,KAAA,CAAAgB,aAAA,CAACV,KAAK;IAACsB,MAAM,EAAEhB,IAAK;IAAAO,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAAE,CACnB,CAAC;AAEV;AAEA,MAAMK,WAAW,GAAGC,QAAQ,CAACC,cAAc,CAAC,MAAM,CAAC;AACnD7B,QAAQ,CAAC8B,MAAM,eAAChC,KAAA,CAAAgB,aAAA,CAACP,OAAO;EAAAU,MAAA;EAAAC,QAAA;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA;AAAA,CAAE,CAAC,EAAEK,WAAW,CAAC"},"metadata":{},"sourceType":"module"}